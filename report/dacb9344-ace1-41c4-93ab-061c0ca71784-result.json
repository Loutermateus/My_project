{"name": "Test adjust position", "status": "failed", "statusDetails": {"message": "AssertionError: Have this row", "trace": "self = <test_exe.TestExe object at 0x106ea5950>\n\n    @allure.title(\"Test adjust position\")\n    def test_open_and_adjust_position(self):\n        self.login_page().open()\n        self.login_page().login()\n        self.menu().settings.open_setting_market()\n        self.markers_pages().open_action_position_by_name(\"pogoda\")\n        self.markers_pages().positions.open_adjust()\n        self.markers_pages().positions.adjust.fill_symbol(\"EUR/USD$\")\n        self.markers_pages().positions.adjust.fill_price(\"200\")\n        self.markers_pages().positions.adjust.fill_volume(\"100\")\n        self.markers_pages().positions.adjust.fill_comments(\"basta\")\n        self.markers_pages().positions.adjust.click_buy()\n        self.markers_pages().positions.adjust.click_ok()\n        self.markers_pages().refresh_page()\n        self.markers_pages().open_action_position_by_name(\"pogoda\")\n        self.markers_pages().positions.find_row_by_username(\"EUR/USD$\")\n        self.markers_pages().positions.open_adjust()\n        self.markers_pages().positions.adjust.fill_symbol(\"EUR/USD$\")\n        self.markers_pages().positions.adjust.fill_price(\"200\")\n        self.markers_pages().positions.adjust.fill_volume(\"100\")\n        self.markers_pages().positions.adjust.fill_comments(\"basta\")\n        self.markers_pages().positions.adjust.click_sell()\n        self.markers_pages().positions.adjust.click_ok()\n        self.markers_pages().refresh_page()\n        self.markers_pages().open_action_position_by_name(\"pogoda\")\n>       self.markers_pages().positions.cant_find_row_by_username(\"EUR/USD$\")\n\ntests/test_exe.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.markers_page.components.positions.positions.Positions object at 0x106f3b390>, username = 'EUR/USD$'\n\n    def cant_find_row_by_username(self, username):\n        for i, row in enumerate(self._rows, start=1):\n            if username not in self.get_row_content(i):\n                assert True  # нашли — тест проходит\n            else:\n>               assert False, \"Have this row\"\nE               AssertionError: Have this row\n\npages/markers_page/components/positions/positions.py:64: AssertionError"}, "steps": [{"name": "Step", "status": "passed", "parameters": [{"name": "name", "value": "'pogoda'"}], "start": 1749512925741, "stop": 1749512926903}, {"name": "Step", "status": "passed", "parameters": [{"name": "name", "value": "'pogoda'"}], "start": 1749512931613, "stop": 1749512932769}, {"name": "Step", "status": "passed", "parameters": [{"name": "name", "value": "'pogoda'"}], "start": 1749512937389, "stop": 1749512938542}], "start": 1749512922218, "stop": 1749512939591, "uuid": "f20dea73-5d8b-422e-ab92-4140477aa1c1", "historyId": "36e9e6dea728ecd40c2e9e7f3372b7f1", "testCaseId": "36e9e6dea728ecd40c2e9e7f3372b7f1", "fullName": "tests.test_exe.TestExe#test_open_and_adjust_position", "labels": [{"name": "epic", "value": "Test tp"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_exe"}, {"name": "subSuite", "value": "TestExe"}, {"name": "host", "value": "Nikkis-MacBook-Air.local"}, {"name": "thread", "value": "87638-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_exe"}]}